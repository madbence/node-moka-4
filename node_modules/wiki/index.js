module.exports = function(client) {
	var http = require('http');

	function search(q, l, f) {
		var search = encodeURIComponent(q);
		http.request({
			hostname: 'en.wikipedia.org',
			port: 80,
			path: '/w/api.php?action=query&list=search&format=json&srsearch=' + search + '&srlimit=' + l,
			method: 'GET',
			headers: {
				'User-Agent': 'node-moka (irc bot, contact: madbence@gmail.com)'
			}
		}, function(res) {
			var data = '';
			res.on('data', function(chunk) {
				data += chunk;
			});
			res.on('end', function() {
				try {
					data = JSON.parse(data);
					f(data);
				} catch(e) {
					console.log(data);
					console.log(e);
				}
			})
		}).end();
	}
	client.on('command:wiki', function(s, t, p) {
		search(p.join(' '), 5, function(data) {
			client.sreply(s, t, '[Wikipedia] "' + p.join(' ') + '", ' + data.query.searchinfo.totalhits + ' talalat:')
			for(var i in data.query.search) {
				var page = data.query.search[i];
				if(!page) return;
				setTimeout(function(i, page) {
					return function() {
						client.sreply(s, t, i + '. talalat: ' + page.title + ' (http://en.wikipedia.org/wiki/' + page.title.replace(/ /g, '_') + ')');
					}
				}(parseInt(i) + 1, page), (parseInt(i) + 1) * 1000);
			}
		})
	})
	client.on('command:wiki1', function(s, t, p) {
		search(p.join(' '), 1, function(data) {
			client.reply(s, t, '[Wikipedia] "' + p.join(' ') + '", ' + data.query.searchinfo.totalhits + ' talalat:')
			var page = data.query.search[0];
			if(!page) return;
			client.sreply(s, t, page.title + ' (http://en.wikipedia.org/wiki/' + page.title.replace(/ /g, '_') + ')');
		})
	})
}